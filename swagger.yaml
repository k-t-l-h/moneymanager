openapi: 3.0.0

info:
  version: "1.0"
  title: "Проект по командной разработке"

paths:
  /users:
    get:
      summary: "Получить список зарегистрированных пользователей"
      security: 
      - bearerAuth: []
      tags: 
        - users
      responses:
        200:
          description: "Список пользователей"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersList'
        403:
          description: "Ошибка доступа"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /users/profile:
    get:
      summary: "Получить профиль пользоваетля"
      security: 
        - bearerAuth: []
      tags:
        - users
      responses:
        200:
          description: "Информация о пользователе"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        403:
          description: "Ошибка доступа"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      summary: "Обновить информацию профиля пользователя"
      security: 
        - bearerAuth: []
      tags:
        - users
      requestBody:
        description: "Обновленная информация профиля"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
      responses:
        200:
          description: "Профиль обновлен"
        403:
          description: "Ошибка доступа"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /auth/login:
    post:
      description: "Авторизация пользователя"
      tags:
        - auth
      requestBody:
        description: "Логин и пароль для авторизации"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInfo'
      responses:
        200:
          description: "Успешная авторизация"
          content:
            application/json:
              schema:
                properties:
                  token:
                    type: string
        400:
          description: "Неверный логин или пароль"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /auth/logout:
    get:
      summary: "Выход из приложения"
      security: 
        - bearerAuth: []
      tags:
        - auth
      responses:
        200:
          description: "Успешный выход"
        400:
          description: "Ошибка выхода"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /auth/register:
    post:
      summary: "Регистрация нового пользователя"
      security: 
        - bearerAuth: []
      tags:
        - auth
      requestBody:
        description: "Логин и пароль"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInfo'
      responses:
        200:
          description: "Новый пользователь зарегистрирован"
        409:
          description: "Невозможно зарегистрировать нового пользователя"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /accounts:
    get:
      summary: "Получение списка счетов пользователя"
      security: 
        - bearerAuth: []
      tags:
        - accounts
      responses:
        200:
          description: "Список счетов пользователя"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsList'
        403:
          description: "Ошибка доступа"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /accounts/create:
    post:
      summary: "Создание нового счета"
      security: 
        - bearerAuth: []
      tags: 
        - accounts
      requestBody:
        description: "Информация о новом счете"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccoutInfo'
      responses:
        200:
          description: "Создан новый счет"
          content:
            application/json:
              schema:
                type: object
                properties:
                  accountId:
                    type: integer
        403:
          description: "Ошибка доступа"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /accounts/{accountId}:
    get:
      summary: "Получение операций по счету"
      security: 
        - bearerAuth: []
      tags: 
        - accounts
      parameters:
        - in: path
          name: accountId
          schema:
            type: integer
          required: true
          description: "Уникальный идентификатор счета"
      responses:
        200:
          description: "Успешная операция"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationInfo'
        403:
          description: "Ошибка доступа"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      summary: "Изменение информации о счете"
      security: 
        - bearerAuth: []
      tags: 
        - accounts
      parameters:
        - in: path
          name: accountId
          schema:
            type: integer
          required: true
          description: "Уникальный идентификатор счета"
      requestBody:
        description: "Обновленная информация о счете"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccoutInfo'
      responses:
        200:
          description: "Успешная операция"
        403:
          description: "Ошибка доступа"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      summary: "Удаление пользовательского счета"
      security: 
        - bearerAuth: []
      tags: 
        - accounts
      parameters:
        - in: path
          name: accountId
          schema:
            type: integer
          required: true
          description: "Уникальный идентификатор счета"
      responses:
        200:
          description: "Успешная операция"
        403:
          description: "Ошибка доступа"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /operations:
    get:
      summary: "Получение проведенных пользователем операций"
      security: 
        - bearerAuth: []
      tags: 
        - operations
      responses:
        200:
          description: "Успешная операция"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationInfo'
        403:
          description: "Ошибка доступа"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /operations/create:
    post:
      summary: "Проведение новой операции"
      security: 
        - bearerAuth: []
      tags: 
        - operations
      requestBody:
        description: "Параметры операции"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationInfo'
      responses:
        200:
          description: "Операция сохранена"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: "Идентификатор операции"
                    type: integer
        403:
          description: "Ошибка доступа"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /operations/{operationId}:
    delete:
      summary: "Удаление операции"
      security: 
        - bearerAuth: []
      tags: 
        - operations
      parameters:
        - in: path
          name: operationId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "Операция удалена"
        403:
          description: "Ошибка доступа"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      summary: "Редактирование операции"
      security: 
        - bearerAuth: []
      tags: 
        - operations
      parameters:
        - in: path
          name: operationId
          required: true
          schema:
            type: integer
      requestBody:
        description: "Обновленная информация"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationInfo'
      responses:
        200:
          description: "Операция обновлена"
        403:
          description: "Ошибка доступа"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UsersList:
      type: array
      items: 
        type: string
    AccountsList:
      type: array
      items:
        $ref: '#/components/schemas/AccoutInfo'
    UserInfo:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
          format: email
    LoginInfo:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
          format: password
    AccoutInfo:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        balance:
          type: number
    OperationInfo:
      type: object
      properties:
        operationType:
          type: string
        from:
          type: integer
        to:
          type: integer
        systemDate:
          type: string
          format: date-time
        userDate:
          type: string
          format: date-time
        category:
          type: string
    ErrorMessage:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string